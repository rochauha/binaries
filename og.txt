
small-kernel-gfx908:	file format elf64-amdgpu


Disassembly of section .note:

0000000000000200 <.note>:
	v_cndmask_b32_e32 v0, s7, v0, vcc                          // 000000000200: 00000007
	v_cndmask_b32_e32 v0, v196, v0, vcc                        // 000000000204: 000001C4
	v_cndmask_b32_e32 v0, s32, v0, vcc                         // 000000000208: 00000020
	v_mac_f16_e32 v162, v65, v38                               // 00000000020C: 47444D41
	v_cndmask_b32_e32 v0, v80, v42, vcc                        // 000000000210: 00005550
	v_subrev_u32_e32 v176, 3, v215                             // 000000000214: 6D61AE83
	v_max_i16_e32 v185, s100, v180                             // 000000000218: 61736864
	v_dot4c_i32_i8_e32 v50, v46, v181                          // 00000000021C: 72656B2E
	v_dot4c_i32_i8_e32 v182, v110, v50                         // 000000000220: 736C656E
	v_mul_u32_u24_e32 v0, 17, v111                             // 000000000224: 1000DE91
	v_ldexp_f16_e32 v176, 43, v151                             // 000000000228: 67612EAB
	v_min_u16_e32 v175, ttmp4, v185                            // 00000000022C: 635F7270
	v_dot8c_i32_i4_e32 v55, v111, v58                          // 000000000230: 746E756F
	v_max_i16_e32 v151, v0, v82                                // 000000000234: 612EA500
	s_bfm_b32 ttmp7, ttmp6, flat_scratch_hi                    // 000000000238: 91736772
	v_max_i16_e32 v151, 4, v87                                 // 00000000023C: 612EAE84
	v_min_i16_e32 v185, s100, v50                              // 000000000240: 65726464
	v_dot4c_i32_i8_e32 v175, v115, v185                        // 000000000244: 735F7373
	v_min_i16_e32 v177, v112, v176                             // 000000000248: 65636170
	v_dot2c_f32_f16_e32 v182, v166, v51                        // 00000000024C: 6F6C67A6
	.long 0xa76c6162                                           // 000000000250: A76C6162
	v_ldexp_f16_e32 v51, v46, v55                              // 000000000254: 66666F2E
	v_cndmask_b32_e32 v58, v115, v50, vcc                      // 000000000258: 00746573
	v_add_u32_e32 v185, 37, v151                               // 00000000025C: 69732EA5
	.long 0xab08657a                                           // 000000000260: AB08657A
	v_subrev_u32_e32 v48, s46, v187                            // 000000000264: 6C61762E
	v_sub_u32_e32 v175, v117, v178                             // 000000000268: 6B5F6575
	.long 0xad646e69                                           // 00000000026C: AD646E69
	v_min_u16_e32 v55, flat_scratch_hi, v182                   // 000000000270: 626F6C67
	v_min_u16_e32 v47, s97, v182                               // 000000000274: 625F6C61
	v_min_i16_e32 v179, ttmp9, v51                             // 000000000278: 65666675
	v_ldexp_f16_e32 v151, v114, v92                            // 00000000027C: 672EB972
	v_dot2c_i32_i16_e32 v58, v114, v183                        // 000000000280: 70756F72
	v_ldexp_f16_e32 v178, v95, v185                            // 000000000284: 6765735F
	v_dot8c_i32_i4_e32 v55, v109, v50                          // 000000000288: 746E656D
	v_pk_fmac_f16_e32 v52, s95, v179                           // 00000000028C: 7869665F
	v_dot4c_i32_i8_e32 v175, s101, v178                        // 000000000290: 735F6465
	v_cndmask_b32_e32 v50, xnack_mask_hi, v189, vcc            // 000000000294: 00657A69
	v_min_i16_e32 v181, 54, v151                               // 000000000298: 656B2EB6
	v_dot4c_i32_i8_e32 v48, ttmp6, v183                        // 00000000029C: 72616E72
	v_min_i16_e32 v185, v103, v175                             // 0000000002A0: 65735F67
	v_dot2c_f32_f16_e32 v50, v103, v182                        // 0000000002A4: 6E656D67
	v_subrev_u32_e32 v48, v116, v175                           // 0000000002A8: 6C615F74
	v_mul_legacy_f32_e32 v55, v105, v51                        // 0000000002AC: 086E6769
	v_min_i16_e32 v181, 53, v151                               // 0000000002B0: 656B2EB5
	v_dot4c_i32_i8_e32 v48, ttmp6, v183                        // 0000000002B4: 72616E72
	v_min_i16_e32 v185, v103, v175                             // 0000000002B8: 65735F67
	v_dot2c_f32_f16_e32 v50, v103, v182                        // 0000000002BC: 6E656D67
	v_add_u32_e32 v185, v116, v175                             // 0000000002C0: 69735F74
	.long 0xa908657a                                           // 0000000002C4: A908657A
	v_dot2c_f32_f16_e32 v48, s46, v182                         // 0000000002C8: 6E616C2E
	v_ldexp_f16_e32 v176, v103, v186                           // 0000000002CC: 67617567
	v_dot2c_i32_i16_e32 v39, s101, v212                        // 0000000002D0: 704FA865
	v_add_u16_e32 v33, s101, v183                              // 0000000002D4: 4C436E65
	v_madmk_f32 v88, v32, 0x676e616c, v161                     // 0000000002D8: 2EB14320 676E616C
	v_min_i16_e32 v179, v117, v176                             // 0000000002E0: 65676175
	v_dot4c_i32_i8_e32 v50, s95, v187                          // 0000000002E4: 7265765F
	v_dot2c_f32_f16_e32 v55, v115, v180                        // 0000000002E8: 6E6F6973
	s_cbranch_i_fork s[0:1], 658                               // 0000000002EC: B8000292
	v_pk_fmac_f16_e32 v48, v46, v182                           // 0000000002F0: 78616D2E
	v_max_i16_e32 v182, s95, v51                               // 0000000002F4: 616C665F
	v_dot2c_f32_f16_e32 v187, v116, v175                       // 0000000002F8: 6F775F74
	v_dot4c_i32_i8_e32 v51, v114, v181                         // 0000000002FC: 72676B72
	v_max_u16_e32 v184, v111, v58                              // 000000000300: 5F70756F
	v_min_i16_e32 v189, v115, v52                              // 000000000304: 657A6973
	.long 0xa50004cd                                           // 000000000308: A50004CD
	v_subrev_u32_e32 v176, s46, v183                           // 00000000030C: 6D616E2E
	v_max_f16_e32 v47, v101, v212                              // 000000000310: 5A5FA965
	v_min_i16_e32 v50, v52, v48                                // 000000000314: 64646134
	.long 0xbb695031                                           // 000000000318: BB695031
	v_add_u32_e32 v185, s46, v56                               // 00000000031C: 6972702E
	v_min_i16_e32 v186, v118, v48                              // 000000000320: 65746176
	v_ldexp_f16_e32 v178, v95, v185                            // 000000000324: 6765735F
	v_dot8c_i32_i4_e32 v55, v109, v50                          // 000000000328: 746E656D
	v_pk_fmac_f16_e32 v52, s95, v179                           // 00000000032C: 7869665F
	v_dot4c_i32_i8_e32 v175, s101, v178                        // 000000000330: 735F6465
	v_cndmask_b32_e32 v50, xnack_mask_hi, v189, vcc            // 000000000334: 00657A69
	v_ldexp_f16_e32 v185, 43, v151                             // 000000000338: 67732EAB
	v_min_u16_e32 v175, ttmp4, v185                            // 00000000033C: 635F7270
	v_dot8c_i32_i4_e32 v55, v111, v58                          // 000000000340: 746E756F
	v_dot4c_i32_i8_e32 v151, v6, v88                           // 000000000344: 732EB106
	v_max_u16_e32 v185, flat_scratch_hi, v56                   // 000000000348: 5F727067
	v_subrev_u32_e32 v52, ttmp7, v184                          // 00000000034C: 6C697073
	v_dot2c_f32_f16_e32 v177, v108, v175                       // 000000000350: 6F635F6C
	v_cndmask_b32_e32 v58, ttmp9, v55, vcc                     // 000000000354: 00746E75
	v_pk_fmac_f16_e32 v185, 39, v151                           // 000000000358: 79732EA7
	v_subrev_u32_e32 v55, ttmp1, v177                          // 00000000035C: 6C6F626D
	v_sub_co_u32_e32 v45, vcc, v172, v47                       // 000000000360: 345A5FAC
	v_madak_f32 v178, s97, v50, 0x6b2e6950                     // 000000000364: 31646461 6B2E6950
	v_fmac_f32_e32 v23, v100, v85                              // 00000000036C: 762EAB64
	v_max_u16_e32 v185, flat_scratch_hi, v56                   // 000000000370: 5F727067
	v_dot2c_f32_f16_e32 v58, v99, v183                         // 000000000374: 6E756F63
	v_madmk_f32 v88, ttmp8, 0x72706776, v129                   // 000000000378: 2EB10274 72706776
	v_add_u32_e32 v184, v95, v57                               // 000000000380: 6970735F
	v_min_u16_e32 v175, ttmp0, v182                            // 000000000384: 635F6C6C
	v_dot8c_i32_i4_e32 v55, v111, v58                          // 000000000388: 746E756F
	v_fmac_f32_e32 v151, v0, v87                               // 00000000038C: 772EAF00
	v_ldexp_f16_e32 v50, s97, v187                             // 000000000390: 66657661
	v_dot8c_i32_i4_e32 v55, v114, v55                          // 000000000394: 746E6F72
	v_xnor_b32_e32 v52, v95, v185                              // 000000000398: 7A69735F
	v_max_i16_e32 v214, s101, v160                             // 00000000039C: 61AD4065
	v_dot4c_i32_i8_e32 v180, ttmp1, v50                        // 0000000003A0: 7368646D
	v_max_i16_e32 v186, s97, v23                               // 0000000003A4: 61742E61
	v_dot8c_i32_i4_e32 v50, v114, v179                         // 0000000003A8: 74656772
	v_min_i16_e32 v54, v185, v176                              // 0000000003AC: 646D61B9
	v_mac_f32_e32 v183, v103, v49                              // 0000000003B0: 2D6E6367
	v_mac_f32_e32 v178, v97, v54                               // 0000000003B4: 2D646D61
	v_add_u32_e32 v50, v97, v54                                // 0000000003B8: 68646D61
	v_mac_f32_e32 v150, v115, v176                             // 0000000003BC: 2D2D6173
	v_addc_co_u32_e32 v188, vcc, flat_scratch_hi, v51, vcc     // 0000000003C0: 39786667
	v_max_i16_e32 v215, s48, v28                               // 0000000003C4: 61AE3830
	v_dot4c_i32_i8_e32 v180, ttmp1, v50                        // 0000000003C8: 7368646D
	v_min_i16_e32 v187, s97, v23                               // 0000000003CC: 65762E61
	v_dot2c_f32_f16_e32 v180, v114, v185                       // 0000000003D0: 6F697372
	v_cndmask_b32_e32 v128, ttmp2, v201, vcc                   // 0000000003D4: 0101926E

Disassembly of section .dynsym:

00000000000003d8 <.dynsym>:
		...
	v_cndmask_b32_e32 v0, s1, v0, vcc                          // 0000000003F0: 00000001
	v_cndmask_b32_e32 v3, v18, v129, vcc                       // 0000000003F4: 00070312
	v_cndmask_b32_e32 v0, s0, v8, vcc                          // 0000000003F8: 00001000
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 0000000003FC: 00000000
	v_cndmask_b32_e32 v0, s44, v0, vcc                         // 000000000400: 0000002C
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000000404: 00000000
	v_cndmask_b32_e32 v0, s11, v0, vcc                         // 000000000408: 0000000B
	v_cndmask_b32_e32 v3, v17, v1, vcc                         // 00000000040C: 00060311
	v_cndmask_b32_e32 v0, 0, v2, vcc                           // 000000000410: 00000480
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000000414: 00000000
	v_cndmask_b32_e32 v0, s64, v0, vcc                         // 000000000418: 00000040
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 00000000041C: 00000000

Disassembly of section .gnu.hash:

0000000000000420 <.gnu.hash>:
	v_cndmask_b32_e32 v0, s1, v0, vcc                          // 000000000420: 00000001
	v_cndmask_b32_e32 v0, s1, v0, vcc                          // 000000000424: 00000001
	v_cndmask_b32_e32 v0, s1, v0, vcc                          // 000000000428: 00000001
	v_cndmask_b32_e32 v0, s26, v0, vcc                         // 00000000042C: 0000001A
	v_cndmask_b32_e32 v0, s36, v4, vcc                         // 000000000430: 00000824
	v_cndmask_b32_e32 v1, s0, v0, vcc                          // 000000000434: 00020000
	v_cndmask_b32_e32 v0, s1, v0, vcc                          // 000000000438: 00000001
	exp pos0 off, off, v124, off vm                            // 00000000043C: C7D150C4 2E7C2883

Disassembly of section .hash:

0000000000000444 <.hash>:
	v_cndmask_b32_e32 v0, s3, v0, vcc                          // 000000000444: 00000003
	v_cndmask_b32_e32 v0, s3, v0, vcc                          // 000000000448: 00000003
		...
	v_cndmask_b32_e32 v0, s2, v0, vcc                          // 000000000454: 00000002
		...
	v_cndmask_b32_e32 v0, s1, v0, vcc                          // 000000000460: 00000001

Disassembly of section .dynstr:

0000000000000464 <.dynstr>:
	v_sub_co_u32_e32 v45, vcc, v0, v47                         // 000000000464: 345A5F00
	v_madak_f32 v178, s97, v50, 0x5f006950                     // 000000000468: 31646461 5F006950
	v_min_i16_e32 v48, s90, v154                               // 000000000470: 6461345A
	v_add_u32_e32 v168, v100, v24                              // 000000000474: 69503164
	v_cndmask_b32_e32 v50, v46, v53, vcc                       // 000000000478: 00646B2E

Disassembly of section .rodata:

0000000000000480 <_Z4add1Pi.kd>:
// Error in decoding _Z4add1Pi.kd : Decoding failed region as bytes.
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x8
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x80
	.byte	 0xB
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0xAF
	.byte	 0x0
	.byte	 0x8C
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x9
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0
	.byte	 0x0

Disassembly of section .text:

0000000000001000 <_Z4add1Pi>:
	s_load_dwordx2 s[0:1], s[4:5], 0x0                         // 000000001000: C0060002 00000000
	v_lshlrev_b32_e32 v0, 2, v0                                // 000000001008: 24000082
	s_waitcnt lgkmcnt(0)                                       // 00000000100C: BF8CC07F
	global_load_dword v1, v0, s[0:1]                           // 000000001010: DC508000 01000000
	s_waitcnt vmcnt(0)                                         // 000000001018: BF8C0F70
	v_add_u32_e32 v1, 1, v1                                    // 00000000101C: 68020281
	global_store_dword v0, v1, s[0:1]                          // 000000001020: DC708000 00000100
	s_endpgm                                                   // 000000001028: BF810000

Disassembly of section .dynamic:

0000000000002000 <_DYNAMIC>:
	v_cndmask_b32_e32 v0, s6, v0, vcc                          // 000000002000: 00000006
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000002004: 00000000
	v_cndmask_b32_e32 v0, v216, v1, vcc                        // 000000002008: 000003D8
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 00000000200C: 00000000
	v_cndmask_b32_e32 v0, s11, v0, vcc                         // 000000002010: 0000000B
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000002014: 00000000
	v_cndmask_b32_e32 v0, s24, v0, vcc                         // 000000002018: 00000018
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 00000000201C: 00000000
	v_cndmask_b32_e32 v0, s5, v0, vcc                          // 000000002020: 00000005
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000002024: 00000000
	v_cndmask_b32_e32 v0, s100, v2, vcc                        // 000000002028: 00000464
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 00000000202C: 00000000
	v_cndmask_b32_e32 v0, s10, v0, vcc                         // 000000002030: 0000000A
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000002034: 00000000
	v_cndmask_b32_e32 v0, s24, v0, vcc                         // 000000002038: 00000018
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 00000000203C: 00000000
	v_dot2c_f32_f16_e32 v255, -2.0, v255                       // 000000002040: 6FFFFEF5
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000002044: 00000000
	v_cndmask_b32_e32 v0, s32, v2, vcc                         // 000000002048: 00000420
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 00000000204C: 00000000
	v_cndmask_b32_e32 v0, s4, v0, vcc                          // 000000002050: 00000004
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000002054: 00000000
	v_cndmask_b32_e32 v0, s68, v2, vcc                         // 000000002058: 00000444
		...

Disassembly of section .comment:

0000000000000000 <.comment>:
	v_mul_f16_e32 v38, v0, v160                                // 000000000000: 444D4100
	v_max_i16_e32 v182, v32, v49                               // 000000000004: 616C6320
	v_fmac_f32_e32 v16, v110, v51                              // 000000000008: 7620676E
	v_add_u32_e32 v185, s101, v185                             // 00000000000C: 69737265
	v_madak_f32 v144, ttmp3, v55, 0x2e302e35                   // 000000000010: 31206E6F 2E302E35
	v_add_u32_e32 v20, s48, v16                                // 000000000018: 68282030
	v_dot4c_i32_i8_e32 v184, ttmp8, v58                        // 00000000001C: 73707474
	v_ldexp_f16_e32 v151, v58, v151                            // 000000000020: 672F2F3A
	v_dot8c_i32_i4_e32 v180, xnack_mask_hi, v58                // 000000000024: 75687469
	v_dot2c_f32_f16_e32 v177, s98, v151                        // 000000000028: 6F632E62
	v_max_i16_e32 v169, v109, v23                              // 00000000002C: 61522F6D
	v_dot2c_f32_f16_e32 v55, v100, v178                        // 000000000030: 6E6F6564
	v_dot2c_f32_f16_e32 v50, s79, v184                         // 000000000034: 6E65704F
	v_dot2c_i32_i16_e32 v54, v67, v183                         // 000000000038: 706D6F43
	v_madmk_f32 v178, ttmp9, 0x6d766c6c, v186                  // 00000000003C: 2F657475 6D766C6C
	v_dot2c_f32_f16_e32 v185, s45, v56                         // 000000000044: 6F72702D
	v_dot8c_i32_i4_e32 v49, v106, v178                         // 000000000048: 7463656A
	v_min_u16_e32 v183, s32, v185                              // 00000000004C: 636F7220
	v_sub_co_u32_e32 v23, vcc, v45, v26                        // 000000000050: 342E352D
	v_add_co_u32_e32 v16, vcc, v46, v25                        // 000000000054: 3220332E
	v_sub_co_u32_e32 v154, vcc, s51, v24                       // 000000000058: 35343033
	v_addc_co_u32_e32 v153, vcc, v32, v48, vcc                 // 00000000005C: 39326120
	v_add_co_u32_e32 v26, vcc, v102, v50                       // 000000000060: 32346566
	v_min_u16_e32 v27, v53, v177                               // 000000000064: 62376335
	v_max_i16_e32 v154, v48, v178                              // 000000000068: 61356530
	v_subrev_co_u32_e32 v156, vcc, v98, v176                   // 00000000006C: 37396162
	v_ldexp_f16_e32 v25, s101, v50                             // 000000000070: 66326465
	v_subrev_co_u32_e32 v51, vcc, v57, v26                     // 000000000074: 36663539
	v_sub_co_u32_e32 v178, vcc, s49, v51                       // 000000000078: 35646631
	v_max_i16_e32 v177, v101, v49                              // 00000000007C: 61626365
	v_min_i16_e32 v176, s54, v156                              // 000000000080: 65613836
	v_add_u16_e32 v0, v100, v20                                // 000000000084: 4C002964
	v_min_i16_e32 v181, xnack_mask_hi, v183                    // 000000000088: 656B6E69
	v_sub_f16_e32 v144, ttmp6, v29                             // 00000000008C: 41203A72
	v_add_u16_e32 v16, s77, v34                                // 000000000090: 4C20444D
	v_madak_f32 v144, s76, v34, 0x2e302e35                     // 000000000094: 3120444C 2E302E35
	.byte 0x30, 0x00                                           // 00000000009C: 30 00

Disassembly of section .symtab:

0000000000000000 <.symtab>:
		...
	v_cndmask_b32_e32 v0, s24, v0, vcc                         // 000000000018: 00000018
	v_cndmask_b32_e32 v4, s0, v1, vcc                          // 00000000001C: 00080200
	v_cndmask_b32_e32 v0, s0, v16, vcc                         // 000000000020: 00002000
		...
	v_cndmask_b32_e32 v0, s1, v0, vcc                          // 000000000030: 00000001
	v_cndmask_b32_e32 v3, v18, v129, vcc                       // 000000000034: 00070312
	v_cndmask_b32_e32 v0, s0, v8, vcc                          // 000000000038: 00001000
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 00000000003C: 00000000
	v_cndmask_b32_e32 v0, s44, v0, vcc                         // 000000000040: 0000002C
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000000044: 00000000
	v_cndmask_b32_e32 v0, s11, v0, vcc                         // 000000000048: 0000000B
	v_cndmask_b32_e32 v3, v17, v1, vcc                         // 00000000004C: 00060311
	v_cndmask_b32_e32 v0, 0, v2, vcc                           // 000000000050: 00000480
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 000000000054: 00000000
	v_cndmask_b32_e32 v0, s64, v0, vcc                         // 000000000058: 00000040
	v_cndmask_b32_e32 v0, s0, v0, vcc                          // 00000000005C: 00000000

Disassembly of section .shstrtab:

0000000000000000 <.shstrtab>:
	v_dot2c_f32_f16_e32 v183, s0, v23                          // 000000000000: 6F6E2E00
	v_madmk_f32 v0, v116, 0x736e7964, v50                      // 000000000004: 2E006574 736E7964
	v_madmk_f32 v0, v121, 0x2e756e67, v54                      // 00000000000C: 2E006D79 2E756E67
	v_add_u32_e32 v57, v104, v176                              // 000000000014: 68736168
	v_max_i16_e32 v180, s0, v23                                // 000000000018: 61682E00
	v_madmk_f32 v0, ttmp7, 0x736e7964, v52                     // 00000000001C: 2E006873 736E7964
	v_madmk_f32 v0, ttmp8, 0x61646f72, v57                     // 000000000024: 2E007274 61646F72
	v_madmk_f32 v0, v116, 0x74786574, v48                      // 00000000002C: 2E006174 74786574
	v_pk_fmac_f16_e32 v178, s0, v23                            // 000000000034: 79642E00
	v_add_u32_e32 v182, v110, v176                             // 000000000038: 696D616E
	v_min_u16_e32 v151, s99, v0                                // 00000000003C: 632E0063
	v_min_i16_e32 v182, v111, v182                             // 000000000040: 656D6D6F
	v_madmk_f32 v0, ttmp2, 0x746d7973, v58                     // 000000000044: 2E00746E 746D7973
	v_madmk_f32 v0, s97, 0x74736873, v49                       // 00000000004C: 2E006261 74736873
	v_min_u16_e32 v48, ttmp6, v186                             // 000000000054: 62617472
	v_dot8c_i32_i4_e32 v57, s0, v151                           // 000000000058: 74732E00
	v_min_u16_e32 v48, ttmp6, v186                             // 00000000005C: 62617472
	.byte 0x00                                                 // 000000000060: 00

Disassembly of section .strtab:

0000000000000000 <.strtab>:
	v_sub_co_u32_e32 v45, vcc, v0, v47                         // 000000000000: 345A5F00
	v_madak_f32 v178, s97, v50, 0x5f006950                     // 000000000004: 31646461 5F006950
	v_min_i16_e32 v48, s90, v154                               // 00000000000C: 6461345A
	v_add_u32_e32 v168, v100, v24                              // 000000000010: 69503164
	v_cndmask_b32_e32 v50, v46, v53, vcc                       // 000000000014: 00646B2E
	v_sub_u16_e32 v44, s95, v162                               // 000000000018: 4E59445F
	v_subrev_f16_e32 v164, v65, v166                           // 00000000001C: 43494D41
	.byte 0x00                                                 // 000000000020: 00
